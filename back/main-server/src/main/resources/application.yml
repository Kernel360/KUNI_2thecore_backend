jwt:
  secret: ${JWT_SECRET_KEY}

spring:
  main:
    allow-bean-definition-overriding: true

  datasource:
    url: ${DB_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:none}
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true
    naming:
      physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
      implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

mybatis:
  mapper-locations: classpath:/mapper/*.xml
  type-aliases-package: com.example._thecore_back.car
  configuration:
    map-underscore-to-camel-case: true

server:
  address: 0.0.0.0
  port: 8080

#jwt:
#  secret: my_secret_key_for_hmac_sha256_algorithm_256bit
#
#spring:
#  main:
#    allow-bean-definition-overriding: true
#
#  datasource:
#    url: jdbc:mysql://kernel-2thecore.cxiswkkki80w.ap-northeast-2.rds.amazonaws.com:3306/KERNEL_2THECORE_DATABASE
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    username: root
#    password: xnejzhdj0710!!
#
#  jpa:
#    hibernate:
#      ddl-auto: update       # Entity 기반으로 DB 테이블 자동 생성/업데이트
#    show-sql: true           # SQL 출력
#    properties:
#      hibernate:
#        format_sql: true
#    defer-datasource-initialization: true
#    naming:
#      physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#      implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
#
#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: 2thecore
#    password: 2thecore
#
#mybatis:
#  mapper-locations: classpath:/mapper/*.xml
#  type-aliases-package: com.example._thecore_back.car
#  configuration:
#    map-underscore-to-camel-case: true