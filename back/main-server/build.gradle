plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

springBoot {
	mainClass = 'com.example.mainserver.MainApplication'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation project(':common') // 공통 모듈 연결

	// JWT 관련 라이브러리
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// DB
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'com.h2database:h2'

	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Swagger(OpenAPI)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5' // spring-w>

	//동적 쿼리
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'

	// RabbitMq
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	runtimeOnly 'com.mysql:mysql-connector-j'



	// Servlet API
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'mysql:mysql-connector-java:8.0.33'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core'
	testRuntimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
	useJUnitPlatform()
}

tasks.test {
	useJUnitPlatform()
	systemProperty "spring.profiles.active",
			System.getProperty("spring.profiles.active", "test")
}