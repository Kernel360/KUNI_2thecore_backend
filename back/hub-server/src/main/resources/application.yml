server:
  port: ${HUB_SERVER_PORT:8082}
  tomcat:
    threads:
      max: 200          # (2.x: server.tomcat.max-threads)
      min-spare: 20     # (2.x: server.tomcat.min-spare-threads)
    accept-count: 100    # 대기 큐(요청 대기열) 길이
    max-connections: 10000   # 동시에 열 수 있는 TCP 연결(keep-alive 포함)
    connection-timeout: 5s   # 첫 요청까지 대기 시간
    keep-alive-timeout: 15s  # keep-alive 유휴 시간
    max-keep-alive-requests: 100  # 한 커넥션당 처리할 요청 수(HTTP/1.1)

spring:
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  datasource:
    hikari:
      maxLifetime: 27000000  # 27,000,000 밀리초 = 7시간 30분
    url: ${DB_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

# 허브서버 로깅
logging:
  config: classpath:logback-spring.xml

car:
  reader:
    db:
      enabled: ${CAR_DB_ENABLED:false}

emulator:
  reader:
    db:
      enabled: ${EMULATOR_DB_ENABLED:false}

jwt:
  secret: ${JWT_SECRET_KEY}

dotenv:
  filename: prod.env

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: never
      probes:
        enabled: true
    prometheus:
      enabled: true
